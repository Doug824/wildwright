rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(ownerId) {
      return isAuthenticated() && request.auth.uid == ownerId;
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Characters collection
    match /characters/{characterId} {
      allow read: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
    }

    // Wild Shape Forms collection
    match /wildShapeForms/{formId} {
      allow read: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
    }

    // Wild Shape Templates collection (read-only)
    match /wildShapeTemplates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow via admin SDK
    }
  }
}
